name: CI CMake Build and Test

on:
  push:
    paths:
      - 'RPGMPacker/**'
      - 'RPGMPackerLib/**'
      - 'RPGMPackerTests/**'
      - '.github/workflows/**'
      - 'CMakeLists.txt'
      - '**.cmake'
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  BUILD_TYPE: Release
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules
  TARGET: RPGMPacker
  TEST_TARGET: RPGMPackerTests

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: "**/cpm_modules"
        key: ${{ github.workflow }}-cpm-modules-${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

    - name: Build
      shell: bash
      run: |
        cmake -E make_directory ${{github.workspace}}/build
        cmake -S $GITHUB_WORKSPACE -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        cmake --build ${{github.workspace}}/build --config $BUILD_TYPE

    - name: Test (Windows)
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        cd ${{github.workspace}}/build/$TEST_TARGET/$BUILD_TYPE
        ./$TEST_TARGET.exe
    - name: Test (Ubuntu & macOS)
      if: matrix.os != 'windows-latest'
      shell: bash
      run: |
        cd ${{github.workspace}}/build/$TEST_TARGET
        ./$TEST_TARGET